{"ast":null,"code":"import _objectSpread from \"/home/auror/Documents/Web-2/project-manager-system/project-manager-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/auror/Documents/Web-2/project-manager-system/project-manager-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/auror/Documents/Web-2/project-manager-system/project-manager-app/src/pages/Auth/SignUp/index.js\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../services/api\";\nimport { login } from \"../../../services/auth\";\nimport Button from \"../../../styles/components/Button\";\nimport { Container, SignUpForm, Content } from \"./styles\";\nexport default function SignUp({\n  history\n}) {\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await api.post(\"/users\", user);\n      const userCreate = {\n        email: user.email,\n        password: user.password\n      };\n      const response = await api.post(\"/sessions\", userCreate);\n      const _response$data = response.data,\n            token = _response$data.token,\n            userData = _response$data.user;\n\n      if (token) {\n        login(token, userData);\n      }\n\n      history.push(\"/\");\n    } catch (err) {\n      toast.error(\"Email ou senha inválido!\");\n    }\n  }\n\n  function handleInputChange(e) {\n    const _e$target = e.target,\n          id = _e$target.id,\n          value = _e$target.value;\n    setUser(_objectSpread({}, user, {\n      [id]: value\n    }));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(SignUpForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Cadastro de usu\\xE1rio\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"NOME\"), React.createElement(\"input\", {\n    id: \"name\",\n    value: user.name,\n    required: true,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"E-MAIL\"), React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    value: user.email,\n    required: true,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"SENHA\"), React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    value: user.password,\n    required: true,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"big\",\n    onClick: handleSubmit,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Cadastrar\"))));\n}","map":{"version":3,"sources":["/home/auror/Documents/Web-2/project-manager-system/project-manager-app/src/pages/Auth/SignUp/index.js"],"names":["React","useState","toast","api","login","Button","Container","SignUpForm","Content","SignUp","history","name","email","password","user","setUser","handleSubmit","e","preventDefault","post","userCreate","response","data","token","userData","push","err","error","handleInputChange","target","id","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../../services/api\";\nimport { login } from \"../../../services/auth\";\n\nimport Button from \"../../../styles/components/Button\";\nimport { Container, SignUpForm, Content } from \"./styles\";\n\nexport default function SignUp({ history }) {\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      await api.post(`/users`, user);\n\n      const userCreate = { email: user.email, password: user.password };\n\n      const response = await api.post(`/sessions`, userCreate);\n\n      const { token, user: userData } = response.data;\n\n      if (token) {\n        login(token, userData);\n      }\n\n      history.push(\"/\");\n    } catch (err) {\n      toast.error(\"Email ou senha inválido!\");\n    }\n  }\n\n  function handleInputChange(e) {\n    const { id, value } = e.target;\n    setUser({\n      ...user,\n      [id]: value\n    });\n  }\n\n  return (\n    <Container>\n      <Content>\n        <SignUpForm onSubmit={handleSubmit}>\n          <h1>Cadastro de usuário</h1>\n\n          <span>NOME</span>\n          <input\n            id=\"name\"\n            value={user.name}\n            required\n            onChange={handleInputChange}\n          />\n\n          <span>E-MAIL</span>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={user.email}\n            required\n            onChange={handleInputChange}\n          />\n\n          <span>SENHA</span>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={user.password}\n            required\n            onChange={handleInputChange}\n          />\n\n          <Button size=\"big\" onClick={handleSubmit} type=\"submit\">\n            Cadastrar\n          </Button>\n        </SignUpForm>\n      </Content>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}